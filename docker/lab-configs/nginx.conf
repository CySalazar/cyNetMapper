events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log   /var/log/nginx/error.log warn;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    # Hide nginx version
    server_tokens off;

    # HTTP server
    server {
        listen       80;
        server_name  lab-nginx;
        root         /usr/share/nginx/html;
        index        index.html index.htm;

        # Custom headers for testing
        add_header X-Lab-Server "nginx-test" always;
        add_header X-Scan-Test "cynetmapper-lab" always;

        location / {
            try_files $uri $uri/ =404;
        }

        location /api/ {
            add_header Content-Type application/json;
            return 200 '{"service":"nginx","version":"test","status":"running"}';
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Simulate different response codes
        location /status/200 { return 200 "OK"; }
        location /status/301 { return 301 http://lab-nginx/; }
        location /status/404 { return 404 "Not Found"; }
        location /status/500 { return 500 "Internal Server Error"; }
    }

    # HTTPS server
    server {
        listen       443 ssl http2;
        server_name  lab-nginx;
        root         /usr/share/nginx/html;
        index        index.html index.htm;

        # SSL configuration
        ssl_certificate     /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;

        # Custom headers for testing
        add_header X-Lab-Server "nginx-ssl-test" always;
        add_header X-Scan-Test "cynetmapper-lab-ssl" always;

        location / {
            try_files $uri $uri/ =404;
        }

        location /ssl-info {
            add_header Content-Type application/json;
            return 200 '{"ssl":true,"protocol":"$ssl_protocol","cipher":"$ssl_cipher"}';
        }
    }
}